/**
 * @Subject 414. 第三大的数
 * 
 * 给定一个非空数组，返回此数组中第三大的数。如果不存在，则返回数组中最大的数。要求算法时间复杂度必须是O(n)。

  示例 1:

  输入: [3, 2, 1]

  输出: 1

  解释: 第三大的数是 1.
  示例 2:

  输入: [1, 2]

  输出: 2

  解释: 第三大的数不存在, 所以返回最大的数 2 .
  示例 3:

  输入: [2, 2, 3, 1]

  输出: 1

  解释: 注意，要求返回第三大的数，是指第三大且唯一出现的数。
  存在两个值为2的数，它们都排第二。
 * @Thought 思路分析
  给数组排序并且去重后，判断数组的长度是否大于3，大于就返回数组下标为2的值，否则就返回最大；

 * @Result 运行结果
  执行用时 88 ms, 在所有 JavaScript 提交中击败了46.72%的用户
  内存消耗：39.7 MB, 在所有 JavaScript 提交中击败了61.62%的用户

 * @author 王绍余
 */


/**
 * @param {number[]} nums
 * @return {number}
 */

var thirdMax = function(nums) {
  // 排序，从大到小
  var arr = Array.from(new Set(nums.sort((a, b) => b - a)));
  // 判断数组长度是否大于3
  return arr.length >= 3 ? arr[2] : arr[0];
};
